
services:
  db:
    image: mongo:latest
    container_name: cantinieau_dcg-dscg
    ports:
      - "27017:27017"
    volumes:
      - db_data:/data/db

  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: cantinieau_dcg-dscg-app
    ports:
      - "5000:5000"
    depends_on:
      - db
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./app:/app
      - /app/node_modules
    command: nodemon /app/index.js server.js

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cantinieau_dcg-dscg-frontend
    ports:
      - "3000:3000"
    depends_on:
      - app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    image: nginx:alpine
    container_name: cantinieau_dcg-dscg-nginx
    ports:
      - "80:80"
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
    depends_on:
      app:
        condition: service_healthy
      frontend:
        condition: service_started

volumes:
  db_data: